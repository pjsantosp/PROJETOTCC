@model SISPTD.Models.DistribProcesso

@{
    ViewBag.Title = "Editar Processo";
}

<h2>Recepcionar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div class="panel-body">
            <span class="text-danger pull-right"><i class="glyphicon glyphicon-info-sign "></i> Os campos em vermelho são de preenchimento obrigatório.</span>
            <h4>Distribuição de Processo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Pessoa.cpf, new { @class ="" })
                        @Html.EditorFor(model => model.Pessoa.cpf, new { htmlAttributes = new { @class = "form-control cpf ", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Pessoa.cpf, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 ">
                    <div class="form-group ">
                        @Html.Label("Paciente", new { @class = "" })
                        @Html.EditorFor(model => model.Pessoa.nome, new { htmlAttributes = new { @class = " uperText form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Pessoa.nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SetorOrigemId, "Setor Origem", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("SetorOrigemId", null, "Selecione Setor de Origem", htmlAttributes: new { @class = "form-control chosen-select" })
                        @Html.ValidationMessageFor(model => model.SetorOrigemId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SetorDestinoId, "Setor Destino", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("SetorDestinoId", null, "Selecione Setor de Destino", htmlAttributes: new { @class = "form-control chosen-select" })
                        @Html.ValidationMessageFor(model => model.SetorDestinoId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.observacoes, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.observacoes, 5, 175, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.observacoes, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>




    //Verificar se vai ser usado


    @*<div class="form-group">
            @Html.LabelFor(model => model.usuarioEnviouId, "Usuario Enviou", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("usuarioEnviouId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.usuarioEnviouId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuarioRecebeuId, "usuario Recebeu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("usuarioRecebeuId", null, htmlAttributes: new { @class = "form-control chosen-select" })
                @Html.ValidationMessageFor(model => model.usuarioRecebeuId, "", new { @class = "text-danger" })
            </div>
        </div>*@




    <div class="well well-sm">
        <input type="submit" name="name" value="Gravar " class="btn btn-primary" />
        @Html.ActionLink("Voltar Para Lista", "Index", null, new { @class = "btn btn-link pull-right" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
